[
    {
        "subtask_id": "start_sequential",
        "subtask_name": "start sequential",
        "agent_collaboration": "logic code",
        "abstracted_objective": "Start a sequential code flow, with multiple subtasks performed in turn"
    },
    {
        "subtask_id": "subtask_0",
        "subtask_name": "select_best_candidate",
        "abstracted_objective": "Evaluate a collection of candidate elements against defined criteria or conditions and select the element or subset that best satisfies the specified requirements.",
        "agent_collaboration": [
            "Debate",
            "Aggregate"
        ],
        "dependencies": [
            "subtask_1",
            "subtask_2"
        ]
    },
    {
        "subtask_id": "subtask_1",
        "subtask_name": "construct_intermediate_representations",
        "abstracted_objective": "Generate structured intermediate representations, relationships, or sequences by applying defined operations, constraints, or transformation rules to input elements, thereby bridging initial inputs and desired outputs through systematic stepwise construction.",
        "agent_collaboration": [
            "CoT",
            "SC_CoT"
        ],
        "dependencies": [
            "subtask_2"
        ]
    },
    {
        "subtask_id": "subtask_2",
        "subtask_name": "select_elements",
        "abstracted_objective": "Identify and extract elements from a collection by evaluating each element against specified criteria or conditions and retaining those that satisfy them.",
        "agent_collaboration": [
            "SC_CoT",
            "CoT"
        ],
        "dependencies": []
    },
    {
        "subtask_id": "end_sequential",
        "subtask_name": "end sequential",
        "agent_collaboration": "logic code",
        "abstracted_objective": "End of current sequential code flow"
    }
]