[
    {
        "subtask_id": "subtask_1",
        "objective": "Generate a single diverse solution to the math problem using a chain-of-thought reasoning approach with a custom prompt.",
        "supporting_info": "Input math problem as a natural language string; uses a custom prompt designed for step-by-step mathematical problem solving.",
        "agent_collaboration": "CoT",
        "dependencies": [],
        "abstracted_objective": "Perform a structured sequence of reasoning operations on an input to generate a single provisional candidate.",
        "subtask_name": "construct_intermediate_steps"
    },
    {
        "subtask_id": "subtask_2",
        "objective": "Aggregate multiple independently generated solutions to select the most consistent or best solution for the math problem.",
        "supporting_info": "A set of multiple solutions generated from the same problem; no additional inputs beyond these solutions and the original problem.",
        "agent_collaboration": "Aggregate",
        "dependencies": [
            "subtask_1"
        ],
        "abstracted_objective": "From a collection of provisional candidates, evaluate each against defined criteria and select the most aligned option.",
        "subtask_name": "select_optimal_candidate"
    },
    {
        "subtask_id": "subtask_3",
        "objective": "Write and execute Python code to verify and analyze the aggregated solution, producing a verified output for the math problem.",
        "supporting_info": "The original math problem and the aggregated solution from the previous step; requires programming capabilities to implement and run code that confirms or refines the solution.",
        "agent_collaboration": "Programmer",
        "dependencies": [
            "subtask_2"
        ],
        "abstracted_objective": "Apply a computational procedure to assess the correctness of a candidate and produce a validation result.",
        "subtask_name": "validate_result"
    },
    {
        "subtask_id": "subtask_4",
        "objective": "Aggregate the aggregated solution and the verified output to produce a final, consolidated answer to the math problem.",
        "supporting_info": "Two candidate solutions: the aggregated solution from initial multiple answers and the verified output from the programmer agent; the original problem is also provided for context.",
        "agent_collaboration": "Aggregate",
        "dependencies": [
            "subtask_2",
            "subtask_3"
        ],
        "abstracted_objective": "Combine multiple candidate outputs into a consolidated result that satisfies specified alignment criteria.",
        "subtask_name": "refine_output"
    }
]