[
    {
        "subtask_id": "subtask_1",
        "objective": "Generate a single candidate solution to the math problem using step-by-step reasoning.",
        "supporting_info": "Input math problem as a string; uses a custom solver with a math solving prompt.",
        "agent_collaboration": "SC_CoT",
        "dependencies": [],
        "abstracted_objective": "Perform a structured sequence of operations on the provided input to generate a provisional output.",
        "subtask_name": "construct_intermediate_steps"
    },
    {
        "subtask_id": "subtask_2",
        "objective": "Aggregate multiple candidate solutions to produce the most consistent or best solution for the math problem.",
        "supporting_info": "Input is the list of candidate solutions generated from multiple iterations of subtask_1 and the original math problem.",
        "agent_collaboration": "Aggregate",
        "dependencies": [
            "subtask_1"
        ],
        "abstracted_objective": "Evaluate multiple provisional outputs against defined alignment criteria and select the most suitable result.",
        "subtask_name": "select_optimal_candidate"
    },
    {
        "subtask_id": "subtask_3",
        "objective": "Verify the aggregated solution by writing and executing Python code to confirm the correctness of the math problem's answer.",
        "supporting_info": "Input is the original math problem and the aggregated solution's response; requires code execution environment.",
        "agent_collaboration": "Programmer",
        "dependencies": [
            "subtask_2"
        ],
        "abstracted_objective": "Assess the selected output against specified correctness criteria and produce a validity indicator.",
        "subtask_name": "validate_result"
    }
]