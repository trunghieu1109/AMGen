[
    {
        "subtask_id": "subtask_1",
        "objective": "Generate a candidate solution to the math problem using step-by-step reasoning.",
        "supporting_info": "Input math problem as a natural language string; uses a custom prompt designed for math problem solving.",
        "agent_collaboration": "CoT",
        "dependencies": [],
        "abstracted_objective": "Perform a structured reasoning sequence over the provided input to produce a provisional output.",
        "subtask_name": "construct_intermediate_steps"
    },
    {
        "subtask_id": "subtask_2",
        "objective": "Aggregate multiple candidate solutions to select the most consistent or best solution for the math problem.",
        "supporting_info": "Input is the list of candidate solutions generated independently from the problem; no additional context required.",
        "agent_collaboration": "Aggregate",
        "dependencies": [
            "subtask_1"
        ],
        "abstracted_objective": "Evaluate a set of provisional outputs against defined criteria and select the most aligned candidate.",
        "subtask_name": "select_optimal_candidate"
    },
    {
        "subtask_id": "subtask_3",
        "objective": "Write and execute Python code to solve the math problem and produce a verified final answer.",
        "supporting_info": "Input includes the original problem and the aggregated solution; requires programming capabilities to implement and run code.",
        "agent_collaboration": "Programmer",
        "dependencies": [
            "subtask_2"
        ],
        "abstracted_objective": "Apply a specified computational procedure to the given inputs to generate a finalized output.",
        "subtask_name": "apply_transformation"
    },
    {
        "subtask_id": "subtask_4",
        "objective": "Perform a final review of the problem and the calculated answer to ensure correctness and quality.",
        "supporting_info": "Input includes the original problem and the output from the programming subtask; uses a final review prompt.",
        "agent_collaboration": "Review",
        "dependencies": [
            "subtask_3"
        ],
        "abstracted_objective": "Assess the generated output against predefined correctness and quality conditions to confirm its validity.",
        "subtask_name": "validate_result"
    }
]