[
  {
    "subtask_id": "subtask_1",
    "objective": "Generate a single candidate solution to the math problem using step-by-step reasoning.",
    "supporting_info": "Input math problem as a natural language string; uses a custom solver with a math solving prompt to produce a detailed solution response.",
    "agent_collaboration": "CoT",
    "dependencies": []
  },
  {
    "subtask_id": "subtask_2",
    "objective": "Aggregate multiple candidate solutions to select the most consistent or best solution for the math problem.",
    "supporting_info": "A list of candidate solutions generated independently from the same problem; aggregation aims to improve reliability by consensus.",
    "agent_collaboration": "Aggregate",
    "dependencies": [
      "subtask_1"
    ]
  },
  {
    "subtask_id": "subtask_3",
    "objective": "Verify the aggregated solution by writing and executing Python code to confirm the correctness of the math problem's answer.",
    "supporting_info": "The original math problem and the aggregated solution's analysis; verification involves programmatic validation.",
    "agent_collaboration": "Programmer",
    "dependencies": [
      "subtask_2"
    ]
  },
  {
    "subtask_id": "subtask_4",
    "objective": "Parse the final answer into a float number format for consistent output.",
    "supporting_info": "The verification output if available, otherwise the aggregated solution response; parsing handles possible string formats to extract a numeric value.",
    "agent_collaboration": "AnswerGenerate",
    "dependencies": [
      "subtask_2",
      "subtask_3"
    ]
  }
]