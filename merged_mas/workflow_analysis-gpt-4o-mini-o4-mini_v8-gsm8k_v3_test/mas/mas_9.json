[
    {
        "subtask_id": "subtask_1",
        "objective": "Generate a single candidate solution to the math problem using step-by-step reasoning.",
        "supporting_info": "Input math problem as a natural language string; uses a custom solver with a math solving prompt to produce a detailed solution response.",
        "agent_collaboration": "CoT",
        "dependencies": [],
        "abstracted_objective": "Perform a structured sequence of operations on the provided input to generate a provisional output.",
        "subtask_name": "construct_intermediate_steps"
    },
    {
        "subtask_id": "subtask_2",
        "objective": "Aggregate multiple candidate solutions to select the most consistent or best solution for the math problem.",
        "supporting_info": "A list of candidate solutions generated independently from the same problem; aggregation aims to improve reliability by consensus.",
        "agent_collaboration": "Aggregate",
        "dependencies": [
            "subtask_1"
        ],
        "abstracted_objective": "Evaluate a set of provisional outputs against defined selection criteria and select the most suitable candidate.",
        "subtask_name": "select_optimal_candidate"
    },
    {
        "subtask_id": "subtask_3",
        "objective": "Verify the aggregated solution by writing and executing Python code to confirm the correctness of the math problem's answer.",
        "supporting_info": "The original math problem and the aggregated solution's analysis; verification involves programmatic validation.",
        "agent_collaboration": "Programmer",
        "dependencies": [
            "subtask_2"
        ],
        "abstracted_objective": "Apply a verification procedure to assess a provided result against specified correctness conditions and produce a validation outcome.",
        "subtask_name": "validate_result"
    },
    {
        "subtask_id": "subtask_4",
        "objective": "Parse the final answer into a float number format for consistent output.",
        "supporting_info": "The verification output if available, otherwise the aggregated solution response; parsing handles possible string formats to extract a numeric value.",
        "agent_collaboration": "AnswerGenerate",
        "dependencies": [
            "subtask_2",
            "subtask_3"
        ],
        "abstracted_objective": "Transform a provided result into a standardized numeric representation for consistent output.",
        "subtask_name": "format_output"
    }
]