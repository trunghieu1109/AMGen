[
    {
        "name": "abstract_workflow_1_1",
        "flow": {
            "Stage 1": {
                "Title": "Expression Analysis and Data Interpretation",
                "Content": "Dissects and analyzes the mathematical expressions and data from the query. It forms the foundation for subsequent reasoning steps.",
                "Objectives": [
                    "Systematically analyze all expressions in the input",
                    "Determine each expression’s behavior, range, and visual structure",
                    "Identify relationships among expressions",
                    "Decompose analysis into modular subtasks"
                ],
                "ExampleSubtasks": [
                    "Sub-task 1: Analyze the primary expression’s behavior, range, and characteristics",
                    "Sub-task 2: Analyze a secondary expression and its relationship with the primary one"
                ]
            },
            "Stage 2": {
                "Title": "Intermediate Computation and Synthesis",
                "Content": "Processes the analyzed expressions to compute intermediate results that are essential for forming the final conclusion.",
                "Objectives": [
                    "Synthesize outputs from Stage 1",
                    "Compute intermediate values based on previous analysis",
                    "Validate computation logic through critical reasoning"
                ],
                "ExampleSubtasks": [
                    "Sub-task 3: Compute intermediate values and synthesize insights using outputs from Sub-task 1 and 2"
                ]
            },
            "Stage 3": {
                "Title": "Final Answer Generation and Integration",
                "Content": "Integrates all prior analyses and computations into a comprehensive final answer that aligns with the original query.",
                "Objectives": [
                    "Integrate outputs from all previous subtasks",
                    "Ensure logical consistency and completeness",
                    "Generate the final answer that directly addresses the query"
                ],
                "ExampleSubtasks": [
                    "Sub-task 4: Generate the final answer using synthesized insights from all previous stages"
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_1_1.py"
    },
    {
        "name": "abstract_workflow_1",
        "flow": {
            "Stage 1": {
                "Title": "Condition Identification and Decomposition",
                "Content": "Identify and decompose the required conditions from the task to enable structured reasoning. This involves breaking the problem into smaller subtasks that target specific conditions essential for solving the query.",
                "Objectives": [
                    "Identify all necessary conditions required to solve the query",
                    "Decompose conditions into sequential and logical subtasks",
                    "Ensure each subtask focuses on a distinct reasoning component"
                ],
                "ExampleSubtasks": [
                    "Sub-task 1: Calculate [condition #1], with context of .......",
                    "Sub-task 2: Based on the output from Sub-task 1, calculate [condition #2], with context ....."
                ]
            },
            "Stage 2": {
                "Title": "Inference and Synthesis",
                "Content": "Use the outputs from Stage 1 to synthesize a final answer. This stage infers the solution by integrating intermediate results and drawing conclusions through iterative refinement.",
                "Objectives": [
                    "Use insights from Stage 1 to infer the final answer",
                    "Synthesize intermediate steps into a cohesive conclusion",
                    "Iteratively refine the final output through multi-round reasoning"
                ],
                "ExampleSubtasks": [
                    "Sub-task 3: Based on the outputs from Sub-task 1 and Sub-task 2, calculate the [final answer]"
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_1.py"
    },
    {
        "name": "abstract_workflow_2",
        "flow": {
            "Stage 1": {
                "Title": "Condition Identification and Modular Reasoning",
                "Content": "This stage focuses on identifying and computing the necessary preconditions or foundational elements required before attempting to derive any intermediate or final result. The subtasks are modularized to isolate different conditions.",
                "Objectives": [
                    "Identify distinct and necessary conditions before computing the final output.",
                    "Break down the problem into modular, condition-specific subtasks.",
                    "Ensure each condition is computed independently for clarity and reuse."
                ],
                "ExampleSubtasks": [
                    "Sub-task 1: Calculate [condition #1], with context ....",
                    "Sub-task 2: Based on the output from Sub-task 1, calculate [condition #2], with context ....."
                ]
            },
            "Stage 2": {
                "Title": "Intermediate Inference and Validation",
                "Content": "This stage synthesizes the previously computed conditions to produce an intermediate output, which is iteratively refined and validated to ensure correctness before final transformation.",
                "Objectives": [
                    "Compute intermediate output using results from condition subtasks.",
                    "Iteratively validate and refine intermediate reasoning.",
                    "Prepare validated intermediate output for final answer generation."
                ],
                "ExampleSubtasks": [
                    "Sub-task 3: Based on the outputs from Sub-task 1 and Sub-task 2, calculate the [intermediate output]"
                ]
            },
            "Stage 3": {
                "Title": "Final Output Generation and Integration",
                "Content": "This final stage transforms the validated intermediate output into the required output format and computes the final result through integration and transformation steps.",
                "Objectives": [
                    "Transform intermediate result into the target format.",
                    "Compute the final result using structured transformation logic.",
                    "Ensure final answer is derived from validated and integrated outputs."
                ],
                "ExampleSubtasks": [
                    "Sub-task 4: Based on the output of sub-task 3, convert [intermediate output] into [specific format] and calculate [the final answer]"
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_2.py"
    },
    {
        "name": "abstract_workflow_3",
        "flow": {
            "Stage 1": {
                "Title": "Scenario Exploration and Enumeration",
                "Content": "Comprehensively consider or evaluate all possible scenarios of the problems referred to in the queries. Each problem may require a dedicated step for consideration[1].",
                "Objectives": [
                    "Comprehensively consider or evaluate all possible scenarios of the problems referred to in the queries[1].",
                    "Each problem in the queries, if necessary, requires a dedicated step for consideration[1]."
                ],
                "ExampleSubtasks": [
                    "Consider / calculate all possible cases for [problem #1][1].",
                    "Based on the output from the first sub-task, consider / calculate potential cases of [problem #2][1]."
                ]
            },
            "Stage 2": {
                "Title": "Case Aggregation and Filtering",
                "Content": "Aggregate and filter the cases generated in Stage 1 to retain only those that meet the conditions stated in the queries[1].",
                "Objectives": [
                    "Aggregate and filter the cases that meet the conditions stated in the queries[1].",
                    "Validate and retain only relevant, condition-satisfying cases[1]."
                ],
                "ExampleSubtasks": [
                    "Based on the outputs from Sub-task 1 and sub-task 2, filter the valid scenarios that meet the [conditions stated in the queries][1]."
                ]
            },
            "Stage 3": {
                "Title": "Intermediate Output Calculation",
                "Content": "Calculate an intermediate output based on the filtered valid cases from Stage 2[1].",
                "Objectives": [
                    "Calculate the intermediate output based on the filtered valid cases from [Stage 2][1].",
                    "Derive a more powerful and comprehensive intermediate output[1]."
                ],
                "ExampleSubtasks": [
                    "Based on the outputs from Sub-task 1, sub-task 2 and sub-task 3, calculate the [intermediate output][1]."
                ]
            },
            "Stage 4": {
                "Title": "Final Answer Derivation",
                "Content": "Convert the intermediate output from Stage 3 into the required format and use it to calculate the final answer for the corresponding query[1].",
                "Objectives": [
                    "Convert the intermediate output to the required format[1].",
                    "Use the converted output to calculate the final answer for the corresponding query[1].",
                    "Ensure a comprehensive and well-supported final answer[1]."
                ],
                "ExampleSubtasks": [
                    "Based on the output of sub-task 3, convert [intermediate answer] into [specific format] and calculate [the final answer][1]."
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_3.py"
    },
    {
        "name": "abstract_workflow_4_1",
        "flow": {
            "Stage 1": {
                "Title": "Parametric Representation Identification",
                "Content": "This stage focuses on identifying the parametric representation of the quantities mentioned in the queries. Each quantity is handled in a separate, dedicated step to ensure clarity and accuracy[1].",
                "Objectives": [
                    "Identify the parametric representation of the quantities in the queries[1].",
                    "Each quantity must be handled in a dedicated step[1]."
                ],
                "ExampleSubtasks": [
                    "Identify parametric representation of [quantity #1][1].",
                    "Identify parametric representation of [quantity #2][1]."
                ]
            },
            "Stage 2": {
                "Title": "Expression Transformation and Alignment",
                "Content": "Based on the parametric representations identified in the previous stage, this stage analyzes and transforms the expressions to create a form that better suits the conditions of the query[1].",
                "Objectives": [
                    "Analyze and transform the identified expressions to obtain a form that better fits the query's conditions[1]."
                ],
                "ExampleSubtasks": [
                    "Transform identified expressions into a clearer form that better fits [condition #1][1]."
                ]
            },
            "Stage 3": {
                "Title": "Requirement-Aligned Intermediate Output Calculation",
                "Content": "Using the transformed expressions from Stage 2, this stage calculates an intermediate output that corresponds directly to the requirements of the query[1].",
                "Objectives": [
                    "Calculate the intermediate output corresponding to the query's requirements[1]."
                ],
                "ExampleSubtasks": [
                    "Calculate the [intermediate output][1]."
                ]
            },
            "Stage 4": {
                "Title": "Final Answer Computation",
                "Content": "This final stage takes the intermediate output from Stage 3, converts it into the required format, and then uses this formatted output to calculate the final answer for the query[1].",
                "Objectives": [
                    "Convert the intermediate output to the required format, then use this to calculate the final answer for the corresponding query[1]."
                ],
                "ExampleSubtasks": [
                    "Convert [intermediate output] into [specific format] and calculate [the final answer][1]."
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_4_1.py"
    },
    {
        "name": "abstract_workflow_4_2",
        "flow": {
            "Stage 1": {
                "Title": "Core Information and Constraint Extraction",
                "Content": "This stage focuses on identifying essential information, inferences, equations, theories, properties, or constraints from the initial query. Each piece of identified information is treated as a distinct sub-task, forming the foundation for subsequent stages.",
                "Objectives": [
                    "Identify necessary information, inferences, equations, theories, properties, or constraints from the queries and their relationships.",
                    "Each necessary piece of information corresponds to a distinct sub-task."
                ],
                "ExampleSubtasks": [
                    "Sub-task 1: Identify the first set of information, constraints, or equations."
                ]
            },
            "Stage 2": {
                "Title": "Parametric Representation Derivation",
                "Content": "This stage derives the parametric representation for various quantities identified in the query. It relies on the information and constraints extracted in Stage 1, with each quantity being handled in a dedicated step to ensure clarity.",
                "Objectives": [
                    "Identify the parametric representation of the quantities in the queries.",
                    "Each quantity must be handled in a dedicated step."
                ],
                "ExampleSubtasks": [
                    "Sub-task 2: Identify parametric representation of [quantity #1].",
                    "Sub-task 3: Identify parametric representation of [quantity #2]."
                ]
            },
            "Stage 3": {
                "Title": "Expression Transformation and Alignment",
                "Content": "This stage analyzes and transforms the expressions derived in the previous stages. The goal is to reshape them into a format that is clearer and better aligned with the specific conditions and requirements of the query, using the parametric representations from Stage 2.",
                "Objectives": [
                    "Analyze and transform the identified expressions to obtain a form that better fits the query's conditions."
                ],
                "ExampleSubtasks": [
                    "Sub-task 4: Transform identified expressions into a clearer form that better fits [condition #1]."
                ]
            },
            "Stage 4": {
                "Title": "Final Output Calculation",
                "Content": "In this stage, the final output is calculated based on the transformed expressions from Stage 3. This stage is dedicated to computing the definitive result that addresses the query's requirements.",
                "Objectives": [
                    "Calculate the final output corresponding to the query's requirements."
                ],
                "ExampleSubtasks": [
                    "Sub-task 5: Calculate the [final output]."
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_4_2.py"
    },
    {
        "name": "abstract_workflow_4_3",
        "flow": {
            "Stage 1": {
                "Title": "Parametric Representation Identification",
                "Content": "This stage focuses on breaking down the problem by identifying the parametric representations of different quantities mentioned in the queries[1].",
                "Objectives": [
                    "Identify the parametric representation of the quantities in the queries[1].",
                    "Each quantity must be identified through a dedicated reasoning step[1]."
                ],
                "ExampleSubtasks": [
                    "Identify the parametric representation of a specific quantity, referred to as [quantity #1][1].",
                    "Identify the parametric representation of a second quantity, [quantity #2], based on the findings for the first[1]."
                ]
            },
            "Stage 2": {
                "Title": "Strategy Formulation",
                "Content": "This stage involves creating a detailed, multi-step plan to solve the overall problem, using the parametric representations identified in the previous stage as a foundation[1].",
                "Objectives": [
                    "Propose a strategy to thoroughly and comprehensively solve the problem[1]."
                ],
                "ExampleSubtasks": [
                    "Based on the parametric representations from Stage 1, propose a strategy to solve the [problem][1]."
                ]
            },
            "Stage 3": {
                "Title": "Final Output Verification",
                "Content": "This final stage is dedicated to checking the solution derived in Stage 2 to ensure it is correct and meets all the conditions specified in the original query[1].",
                "Objectives": [
                    "Verify final output to ensure it matches the conditions from queries[1].",
                    "Verify the final output from [Stage 2][1]."
                ],
                "ExampleSubtasks": [
                    "Verify the [final answer] from Stage 2 to ensure it aligns with the query's [conditions] using an iterative reflection process[1]."
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_4_3.py"
    },
    {
        "name": "abstract_workflow_4",
        "flow": {
            "Stage 1": {
                "Title": "Parametric Representation Identification",
                "Content": "This stage focuses on identifying the parametric representation of the quantities in the queries. Each quantity is addressed in a dedicated step to ensure clarity and modularity[1].",
                "Objectives": [
                    "Identify the parametric representation of the quantities in the queries[1].",
                    "Ensure each quantity is addressed through a dedicated step for clarity and modularity[1]."
                ],
                "ExampleSubtasks": [
                    "Identify parametric representation of [quantity #1][1].",
                    "Identify the parametric representation of [quantity #2][1]."
                ]
            },
            "Stage 2": {
                "Title": "Expression Analysis and Transformation",
                "Content": "Based on the expressions identified in Stage 1, this stage analyzes and transforms them into a form that better fits the query's specific conditions and requirements[1].",
                "Objectives": [
                    "Analyze and transform the identified expressions to obtain a form that better fits the query's conditions[1]."
                ],
                "ExampleSubtasks": [
                    "Transform the [expression #1] into a clearer form that better fits [condition #1][1]."
                ]
            },
            "Stage 3": {
                "Title": "Final Output Calculation",
                "Content": "Using the transformed expressions from Stage 2, this stage calculates the final output that corresponds to the query's requirements[1].",
                "Objectives": [
                    "Calculate the final output corresponding to the query's requirements[1]."
                ],
                "ExampleSubtasks": [
                    "Calculate the [final output] based on the output of sub-tasks 1, 2, and 3[1]."
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_4.py"
    },
    {
        "name": "abstract_workflow_5_1",
        "flow": {
            "Stage 1": {
                "Title": "Core Information Extraction",
                "Content": "This stage focuses on identifying all necessary components from the initial query. It involves breaking down the problem to extract core elements like equations, constraints, or logical relationships to ensure each key piece of information is handled as a distinct sub-task[1].",
                "Objectives": [
                    "Identify necessary information, inferences, equations, theories, properties, or constraints from the queries and their relationships[1].",
                    "Ensure each necessary component corresponds to a distinct sub-task[1]."
                ],
                "ExampleSubtasks": [
                    "Identify the first set of information, constraints, or equations[1].",
                    "Identify additional information, building upon the results of the first sub-task[1]."
                ]
            },
            "Stage 2": {
                "Title": "Intermediate Value Computation",
                "Content": "In this stage, the information identified in Stage 1 is analyzed and transformed to compute intermediate values. This process is structured into modular sub-tasks to facilitate clear reasoning and calculation steps[1].",
                "Objectives": [
                    "Analyze and transform the identified information to calculate intermediate values[1].",
                    "Ensure each intermediate value corresponds to a distinct sub-task for modular reasoning[1]."
                ],
                "ExampleSubtasks": [
                    "Calculate [intermediate value #1] using an iterative reflection process based on outputs from Stage 1[1]."
                ]
            },
            "Stage 3": {
                "Title": "Final Output Derivation",
                "Content": "This final stage is dedicated to calculating the definitive output for the user's request. It synthesizes the results and intermediate values generated in the previous stages to produce a comprehensive and robust final answer[1].",
                "Objectives": [
                    "Calculate the final output corresponding to the query/request, based on the analysis and intermediate values from Stage 2[1]."
                ],
                "ExampleSubtasks": [
                    "Calculate the [final output] based on the outputs of all previous sub-tasks[1].",
                    "Make a final decision on the [final output] after reviewing all generated arguments and calculations[1]."
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_5_1.py"
    },
    {
        "name": "abstract_workflow_5",
        "flow": {
            "Stage 1": {
                "Title": "Problem Decomposition and Information Extraction",
                "Content": "This stage identifies necessary information, inferences, equations, theories, properties, or constraints from the queries and their relationships. It ensures that each necessary element is mapped to a distinct sub-task to support structured reasoning[1].",
                "Objectives": [
                    "Identify necessary information, inferences, equations, theories, properties, or constraints from the queries and their relationships[1].",
                    "Ensure each necessary element maps to a distinct sub-task to support structured reasoning[1]."
                ],
                "ExampleSubtasks": [
                    "Sub-task 1: Identify the first set of information, constraints, or equations[1].",
                    "Sub-task 2: Identify additional information, building upon the results of Sub-task 1[1]."
                ]
            },
            "Stage 2": {
                "Title": "Intermediate Value Analysis and Transformation",
                "Content": "This stage analyzes and transforms the identified information from the previous stage to calculate intermediate values. It ensures each intermediate value aligns with a distinct sub-task for clear, modular computation[1].",
                "Objectives": [
                    "Analyze and transform the identified information to calculate intermediate values[1].",
                    "Ensure each intermediate value aligns with a distinct sub-task for clear, modular computation[1]."
                ],
                "ExampleSubtasks": [
                    "Sub-task 3: Calculate an intermediate value based on the outputs from Sub-task 1 and Sub-task 2[1]."
                ]
            },
            "Stage 3": {
                "Title": "Final Output Computation",
                "Content": "This stage calculates the final output for the query, grounded in the prior analysis and intermediate values. The goal is to produce a result that is accurate, comprehensive, and aligned with the query's requirements[1].",
                "Objectives": [
                    "Calculate the final output corresponding to the query or request, grounded in prior analysis and intermediate values[1].",
                    "Ensure the final result is accurate, comprehensive, and aligned with the query's requirements[1]."
                ],
                "ExampleSubtasks": [
                    "Sub-task 4: Calculate the final output based on the results of sub-tasks 1, 2, and 3[1]."
                ]
            },
            "Stage 4": {
                "Title": "Final Answer Derivation and Formatting",
                "Content": "This final stage converts the output from the previous sub-task into the required format and uses this formatted result to calculate the final answer for the query[1].",
                "Objectives": [
                    "Convert the final output from the previous subtask into the required format[1].",
                    "Use the formatted result to calculate the final answer for the corresponding query[1]."
                ],
                "ExampleSubtasks": [
                    "Sub-task 5: Convert the final output into a specific format and calculate the final answer based on the output of sub-task 4[1]."
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_5.py"
    },
    {
        "name": "abstract_workflow_6",
        "flow": {
            "Stage 1": {
                "Title": "Condition Identification and Subtask Structuring",
                "Content": "This stage focuses on identifying the necessary conditions required to compute the final output. It breaks down these conditions into distinct sub-tasks to create a modular and logical workflow.",
                "Objectives": [
                    "Identify the necessary conditions required before computing the final output.",
                    "Ensure each condition is mapped to a distinct sub-task for modular and logical progression."
                ],
                "ExampleSubtasks": [
                    "Calculate condition #1",
                    "Calculate condition #2"
                ]
            },
            "Stage 2": {
                "Title": "Intermediate Inference and Calculation",
                "Content": "This stage involves inferring relevant statements and performing intermediate calculations. It builds upon the conditions identified in the first stage to move closer to the final solution.",
                "Objectives": [
                    "Infer relevant statements and perform intermediate calculations based on the previously identified conditions.",
                    "Ensure each inference contributes meaningfully to solving the overall query."
                ],
                "ExampleSubtasks": [
                    "Infer [statement / calculation #1]",
                    "Infer [statement / calculation #2]"
                ]
            },
            "Stage 3": {
                "Title": "Intermediate Answer Calculation",
                "Content": "This stage integrates the outputs from all previous steps to calculate an intermediate answer. It ensures that the result is consistent with the logical flow and constraints established earlier.",
                "Objectives": [
                    "Calculate the intermediate answer for the query by integrating outputs from all previous steps.",
                    "Ensure the result aligns with the logical flow and constraints identified earlier."
                ],
                "ExampleSubtasks": [
                    "Calculate an [intermediate answer]"
                ]
            },
            "Stage 4": {
                "Title": "Final Answer Derivation",
                "Content": "This final stage calculates the definitive answer to the query. It integrates all intermediate steps and logical inferences from the preceding stages to ensure the solution is complete and satisfies all requirements.",
                "Objectives": [
                    "Calculate the final answer for the query by integrating all intermediate steps and logical inferences from earlier stages.",
                    "Ensure the solution fully satisfies the query’s requirements and constraints."
                ],
                "ExampleSubtasks": [
                    "Calculate the [final answer]"
                ]
            }
        },
        "code_path": "abstract_workflow/abstract_workflow_6.py"
    }
]