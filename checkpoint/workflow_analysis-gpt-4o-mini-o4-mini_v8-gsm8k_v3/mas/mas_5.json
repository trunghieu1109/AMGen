[
    {
        "subtask_id": "subtask_1",
        "objective": "Generate a single candidate solution to the math problem using a custom solver with a chain-of-thought prompt.",
        "supporting_info": "Input math problem as a string; uses a predefined math solving prompt to guide step-by-step reasoning.",
        "agent_collaboration": "CoT",
        "dependencies": [],
        "abstracted_objective": "Produce a candidate output from given input by systematically applying a structured reasoning procedure.",
        "subtask_name": "generate candidate outputs"
    },
    {
        "subtask_id": "subtask_2",
        "objective": "Aggregate multiple candidate solutions to the math problem to produce the most consistent or best final solution.",
        "supporting_info": "Input is the list of candidate solutions generated independently from the problem; no additional problem input is used here.",
        "agent_collaboration": "Aggregate",
        "dependencies": [
            "subtask_1"
        ],
        "abstracted_objective": "Combine multiple candidate outputs into a single coherent result based on consistency criteria.",
        "subtask_name": "consolidate candidate outputs"
    },
    {
        "subtask_id": "subtask_3",
        "objective": "Verify the aggregated solution by writing and executing Python code to confirm the correctness of the math problem's answer.",
        "supporting_info": "Input is the original math problem and the aggregated solution; requires ability to programmatically analyze and solve the problem.",
        "agent_collaboration": "Programmer",
        "dependencies": [
            "subtask_2"
        ],
        "abstracted_objective": "Verify that the consolidated result satisfies the input criteria through an independent validation procedure.",
        "subtask_name": "validate final result"
    }
]