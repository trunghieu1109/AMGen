[
    {
        "subtask_id": "subtask_1",
        "objective": "Generate an initial answer to the problem with an associated thought process using step-by-step reasoning.",
        "supporting_info": "Input problem statement requiring an answer; no prior solutions needed.",
        "agent_collaboration": "CoT",
        "dependencies": [],
        "abstracted_objective": "Generate an initial candidate solution by applying logical reasoning to the input and record the reasoning process.",
        "subtask_name": "generate_candidate"
    },
    {
        "subtask_id": "subtask_2",
        "objective": "Aggregate multiple candidate answers to select the most consistent or best solution.",
        "supporting_info": "A set of initial answers generated independently for the same problem.",
        "agent_collaboration": "Aggregate",
        "dependencies": [
            "subtask_1"
        ],
        "abstracted_objective": "Combine multiple candidate solutions into a cohesive version by evaluating their consistency and selecting the most coherent elements.",
        "subtask_name": "aggregate_candidates"
    },
    {
        "subtask_id": "subtask_3",
        "objective": "Extract a name-based answer from the best aggregated solution according to a specific extraction prompt.",
        "supporting_info": "The best answer selected from aggregation and the original problem statement.",
        "agent_collaboration": "AnswerGenerate",
        "dependencies": [
            "subtask_2"
        ],
        "abstracted_objective": "Isolate specific elements from the chosen solution for targeted extraction based on a prompt.",
        "subtask_name": "extract_elements"
    },
    {
        "subtask_id": "subtask_4",
        "objective": "Check the identity information in the name-extracted answer to ensure correctness.",
        "supporting_info": "Name-extracted answer and the original problem statement.",
        "agent_collaboration": "AnswerGenerate",
        "dependencies": [
            "subtask_3"
        ],
        "abstracted_objective": "Confirm that isolated elements satisfy intended identity or contextual requirements.",
        "subtask_name": "verify_elements"
    },
    {
        "subtask_id": "subtask_5",
        "objective": "Check the profession information in the identity-checked answer for accuracy.",
        "supporting_info": "Identity-checked answer and the original problem statement.",
        "agent_collaboration": "AnswerGenerate",
        "dependencies": [
            "subtask_4"
        ],
        "abstracted_objective": "Confirm that isolated elements meet required attribute or accuracy criteria.",
        "subtask_name": "verify_elements"
    },
    {
        "subtask_id": "subtask_6",
        "objective": "Fact-check the profession-checked answer to verify factual correctness.",
        "supporting_info": "Profession-checked answer and the original problem statement.",
        "agent_collaboration": "AnswerGenerate",
        "dependencies": [
            "subtask_5"
        ],
        "abstracted_objective": "Assess the candidate solution against factual criteria and output a correctness judgment.",
        "subtask_name": "fact_check"
    },
    {
        "subtask_id": "subtask_7",
        "objective": "Check the style of the fact-checked answer to ensure it meets stylistic requirements.",
        "supporting_info": "Fact-checked answer and the original problem statement.",
        "agent_collaboration": "AnswerGenerate",
        "dependencies": [
            "subtask_6"
        ],
        "abstracted_objective": "Evaluate the checked content against style and completeness criteria to ensure it meets quality standards.",
        "subtask_name": "quality_check"
    },
    {
        "subtask_id": "subtask_8",
        "objective": "Perform additional verification on the style-checked answer to further ensure quality and correctness.",
        "supporting_info": "Style-checked answer and the original problem statement.",
        "agent_collaboration": "AnswerGenerate",
        "dependencies": [
            "subtask_7"
        ],
        "abstracted_objective": "Detect any missing or inconsistent aspects in the evaluated solution relative to requirements.",
        "subtask_name": "identify_gaps"
    },
    {
        "subtask_id": "subtask_9",
        "objective": "Refine and format the double-verified answer into the final response according to a formatting prompt.",
        "supporting_info": "Double-verified answer and the original problem statement.",
        "agent_collaboration": "AnswerGenerate",
        "dependencies": [
            "subtask_8"
        ],
        "abstracted_objective": "Transform the finalized solution into the specified output structure and presentation format.",
        "subtask_name": "format_output"
    }
]