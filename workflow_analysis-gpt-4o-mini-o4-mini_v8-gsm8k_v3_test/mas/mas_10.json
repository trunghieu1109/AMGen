[
    {
        "subtask_id": "subtask_1",
        "objective": "Generate a single candidate solution to the math problem using step-by-step reasoning.",
        "supporting_info": "Input math problem as a natural language string; uses a custom agent with a Chain-of-Thought reasoning prompt.",
        "agent_collaboration": "CoT",
        "dependencies": [],
        "abstracted_objective": "Produce a candidate output from provided input by systematically applying a structured reasoning procedure.",
        "subtask_name": "generate candidate outputs"
    },
    {
        "subtask_id": "subtask_2",
        "objective": "Combine multiple candidate solutions to the math problem to produce the most consistent or best final solution.",
        "supporting_info": "Input is the list of candidate solutions generated from multiple iterations of subtask_1 and the original problem statement.",
        "agent_collaboration": "Aggregate",
        "dependencies": [
            "subtask_1"
        ],
        "abstracted_objective": "Integrate multiple candidate outputs into a single coherent result by evaluating consistency among them.",
        "subtask_name": "consolidate candidate outputs"
    },
    {
        "subtask_id": "subtask_3",
        "objective": "Verify the correctness of the aggregated solution by writing and executing Python code that solves the math problem.",
        "supporting_info": "Input is the original math problem and the aggregated solution's analysis; uses a Programmer agent to generate and run code.",
        "agent_collaboration": "Programmer",
        "dependencies": [
            "subtask_2"
        ],
        "abstracted_objective": "Verify that the consolidated result satisfies predefined criteria through an independent evaluation procedure.",
        "subtask_name": "validate final result"
    }
]